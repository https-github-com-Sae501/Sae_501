"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/sculpt.tsx":
/*!************************!*\
  !*** ./app/sculpt.tsx ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_examples_jsm_controls_OrbitControls__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three/examples/jsm/controls/OrbitControls */ \"(app-pages-browser)/./node_modules/three/examples/jsm/controls/OrbitControls.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nconst Sculpt = ()=>{\n    _s();\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (true) {\n            function main() {\n                const canvas = document.querySelector(\"#c\");\n                const renderer = new three__WEBPACK_IMPORTED_MODULE_2__.WebGLRenderer({\n                    antialias: true,\n                    canvas\n                });\n                const cellSize = 8;\n                const fov = 75;\n                const aspect = window.innerWidth / window.innerHeight;\n                const near = 0.1;\n                const far = 1000;\n                const camera = new three__WEBPACK_IMPORTED_MODULE_2__.PerspectiveCamera(fov, aspect, near, far);\n                camera.position.set(-cellSize * 0.3, cellSize * 0.8, -cellSize * 0.3);\n                const controls = new three_examples_jsm_controls_OrbitControls__WEBPACK_IMPORTED_MODULE_3__.OrbitControls(camera, canvas);\n                controls.target.set(cellSize / 2, cellSize / 3, cellSize / 2);\n                const scene = new three__WEBPACK_IMPORTED_MODULE_2__.Scene();\n                scene.background = new three__WEBPACK_IMPORTED_MODULE_2__.Color(\"lightblue\");\n                function addLight(x, y, z) {\n                    const color = 0xFFFFFF;\n                    const intensity = 3;\n                    const light = new three__WEBPACK_IMPORTED_MODULE_2__.DirectionalLight(color, intensity);\n                    light.position.set(x, y, z);\n                    scene.add(light);\n                }\n                addLight(-1, 2, 4);\n                addLight(1, -1, -2);\n                const cell = new Uint8Array(cellSize * cellSize * cellSize);\n                const geometry = new three__WEBPACK_IMPORTED_MODULE_2__.BoxGeometry(1, 1, 1);\n                const material = new three__WEBPACK_IMPORTED_MODULE_2__.MeshPhongMaterial({\n                    color: \"gray\"\n                });\n                const cubes = [];\n                for(let y = 0; y < cellSize; ++y){\n                    for(let z = 0; z < cellSize; ++z){\n                        for(let x = 0; x < cellSize; ++x){\n                            const offset = y * cellSize * cellSize + z * cellSize + x;\n                            cell[offset] = 1;\n                        }\n                    }\n                }\n                for(let y = 0; y < cellSize; ++y){\n                    for(let z = 0; z < cellSize; ++z){\n                        for(let x = 0; x < cellSize; ++x){\n                            const offset = y * cellSize * cellSize + z * cellSize + x;\n                            const block = cell[offset];\n                            if (block) {\n                                const mesh = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(geometry, material);\n                                mesh.position.set(x, y, z);\n                                scene.add(mesh);\n                                cubes.push(mesh);\n                            }\n                        }\n                    }\n                }\n                const raycaster = new three__WEBPACK_IMPORTED_MODULE_2__.Raycaster();\n                const mouse = new three__WEBPACK_IMPORTED_MODULE_2__.Vector2();\n                canvas.addEventListener(\"click\", onMouseClick);\n                function onMouseClick(event) {\n                    event.preventDefault();\n                    const canvasBounds = renderer.domElement.getBoundingClientRect();\n                    const mouseX = (event.clientX - canvasBounds.left) / canvasBounds.width * 2 - 1;\n                    const mouseY = -(event.clientY - canvasBounds.top) / canvasBounds.height * 2 + 1;\n                    mouse.x = mouseX;\n                    mouse.y = mouseY;\n                    raycaster.setFromCamera(mouse, camera);\n                    const intersects = raycaster.intersectObjects(cubes);\n                    if (intersects.length > 0) {\n                        const selectedCube = intersects[0].object;\n                        scene.remove(selectedCube);\n                        cubes.splice(cubes.indexOf(selectedCube), 1);\n                        requestRenderIfNotRequested();\n                    }\n                }\n                function resizeRendererToDisplaySize(renderer) {\n                    const canvas = renderer.domElement;\n                    const width = canvas.clientWidth;\n                    const height = canvas.clientHeight;\n                    const needResize = canvas.width !== width || canvas.height !== height;\n                    if (needResize) {\n                        renderer.setSize(width, height, false);\n                    }\n                    return needResize;\n                }\n                let renderRequested = false;\n                function render() {\n                    renderRequested = undefined;\n                    if (resizeRendererToDisplaySize(renderer)) {\n                        const canvas = renderer.domElement;\n                        camera.aspect = canvas.clientWidth / canvas.clientHeight;\n                        camera.updateProjectionMatrix();\n                    }\n                    controls.update();\n                    renderer.render(scene, camera);\n                }\n                render();\n                function requestRenderIfNotRequested() {\n                    if (!renderRequested) {\n                        renderRequested = true;\n                        requestAnimationFrame(render);\n                    }\n                }\n                controls.addEventListener(\"change\", requestRenderIfNotRequested);\n                window.addEventListener(\"resize\", requestRenderIfNotRequested);\n            }\n            main();\n        }\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n        id: \"c\",\n        style: {\n            width: \"100%\",\n            height: \"100%\"\n        }\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\sellay1\\\\Desktop\\\\Sae_501-1\\\\app\\\\sculpt.tsx\",\n        lineNumber: 136,\n        columnNumber: 10\n    }, undefined);\n};\n_s(Sculpt, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = Sculpt;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Sculpt);\nvar _c;\n$RefreshReg$(_c, \"Sculpt\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/sculpt.tsx\n"));

/***/ })

});